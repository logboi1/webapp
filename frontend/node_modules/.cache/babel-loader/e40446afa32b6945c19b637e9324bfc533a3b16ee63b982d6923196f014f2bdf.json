{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BEN\\\\Desktop\\\\webapp\\\\frontend\\\\src\\\\components\\\\payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport paymentApi from \"../API/paymentApi\";\nimport useStore from \"../store\";\nimport { PaystackButton } from \"react-paystack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  reference: new Date().getTime().toString(),\n  email: \"user@example.com\",\n  amount: 200000,\n  //Amount is in the country's lowest currency. E.g Kobo, so 20000 kobo = N200\n  publicKey: \"pk_test_4a9a3f6b23362918bbe4cbaadb3860d7b96f6553\"\n};\nconst PaymentPage = () => {\n  _s();\n  const userProfile = useStore(state => state.userProfile);\n  const [hasPayment, setHasPayment] = useState(false);\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const [paymentReference, setPaymentReference] = useState(\"\");\n  const [payStackDetail, setPayStackDetails] = useState([]);\n  const userId = userProfile._id;\n\n  // Define the hardcoded payment details\n  const paymentDetails = [{\n    description: \"Tuition Fee\",\n    amount: 500\n  }, {\n    description: \"Library Fee\",\n    amount: 50\n  }, {\n    description: \"Laboratory Fee\",\n    amount: 100\n  }, {\n    description: \"Miscellaneous Fee\",\n    amount: 30\n  }];\n  const checkPaymentStatus = async () => {\n    try {\n      const response = await paymentApi.checkPayment(userId);\n      setHasPayment(response.hasPayment);\n    } catch (error) {\n      console.error(\"Error checking payment status:\", error);\n    }\n  };\n\n  // Calculate the total amount\n  const getTotalAmount = () => {\n    return paymentDetails.reduce((total, detail) => total + detail.amount, 0);\n  };\n  const formatCurrency = value => {\n    return value.toLocaleString(\"en-US\", {\n      style: \"currency\",\n      currency: \"NGN\"\n    });\n  };\n  const handlePaystackSuccessAction = async reference => {\n    // Implementation for whatever you want to do with reference and after success call.\n    setPayStackDetails(reference);\n    setPaymentReference(reference.trxref);\n    setPaymentStatus(reference.message);\n    console.log(\"reference:\", paymentStatus, paymentReference, payStackDetail);\n    const paymentData = {\n      userId,\n      referencId: paymentReference,\n      amount: getTotalAmount(),\n      date: new Date(),\n      status: paymentStatus,\n      section: userProfile.section,\n      level: userProfile.level\n    };\n    console.log(\"payload\", paymentData);\n    try {\n      const response = await paymentApi.savePayment(paymentData);\n      console.log(response);\n    } catch (error) {\n      console.log(\"Error saving payment:\", error);\n    }\n  };\n  const handlePaystackCloseAction = () => {\n    // implementation for  whatever you want to do when the Paystack dialog closed.\n    console.log(\"closed\");\n  };\n  const componentProps = {\n    ...config,\n    text: \"Proceed to Paystack\",\n    onSuccess: reference => handlePaystackSuccessAction(reference),\n    onClose: handlePaystackCloseAction\n  };\n  const handleVerificationStart = () => {\n    // Redirect or perform other actions to start the verification process\n  };\n  const handlePaymentStart = () => {\n    // Open the Paystack payment gateway in a new tab\n    const paymentUrl = \"https://paystack.com\"; // Replace with the actual Paystack payment URL\n    window.open(paymentUrl, \"_blank\");\n  };\n  useEffect(() => {\n    checkPaymentStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: hasPayment ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have already made a payment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerificationStart,\n        children: \"Start Verification for Other Fees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [paymentDetails && paymentDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: detail.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(detail.amount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(getTotalAmount())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not made any payment. Press the button below to start the verification for other fees uploading.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PaystackButton, {\n        ...componentProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"KL+BZkMQ3dEDBupDa/9nBjLPSV8=\", false, function () {\n  return [useStore];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","paymentApi","useStore","PaystackButton","jsxDEV","_jsxDEV","config","reference","Date","getTime","toString","email","amount","publicKey","PaymentPage","_s","userProfile","state","hasPayment","setHasPayment","paymentStatus","setPaymentStatus","paymentReference","setPaymentReference","payStackDetail","setPayStackDetails","userId","_id","paymentDetails","description","checkPaymentStatus","response","checkPayment","error","console","getTotalAmount","reduce","total","detail","formatCurrency","value","toLocaleString","style","currency","handlePaystackSuccessAction","trxref","message","log","paymentData","referencId","date","status","section","level","savePayment","handlePaystackCloseAction","componentProps","text","onSuccess","onClose","handleVerificationStart","handlePaymentStart","paymentUrl","window","open","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/BEN/Desktop/webapp/frontend/src/components/payment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport paymentApi from \"../API/paymentApi\";\r\nimport useStore from \"../store\";\r\nimport { PaystackButton } from \"react-paystack\";\r\n\r\nconst config = {\r\n  reference: new Date().getTime().toString(),\r\n  email: \"user@example.com\",\r\n  amount: 200000, //Amount is in the country's lowest currency. E.g Kobo, so 20000 kobo = N200\r\n  publicKey: \"pk_test_4a9a3f6b23362918bbe4cbaadb3860d7b96f6553\",\r\n};\r\n\r\nconst PaymentPage = () => {\r\n  const userProfile = useStore((state) => state.userProfile);\r\n  const [hasPayment, setHasPayment] = useState(false);\r\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\r\n  const [paymentReference, setPaymentReference] = useState(\"\");\r\n  const [payStackDetail, setPayStackDetails] = useState([]);\r\n\r\n  const userId = userProfile._id;\r\n\r\n  // Define the hardcoded payment details\r\n  const paymentDetails = [\r\n    { description: \"Tuition Fee\", amount: 500 },\r\n    { description: \"Library Fee\", amount: 50 },\r\n    { description: \"Laboratory Fee\", amount: 100 },\r\n    { description: \"Miscellaneous Fee\", amount: 30 },\r\n  ];\r\n\r\n  const checkPaymentStatus = async () => {\r\n    try {\r\n      const response = await paymentApi.checkPayment(userId);\r\n      setHasPayment(response.hasPayment);\r\n    } catch (error) {\r\n      console.error(\"Error checking payment status:\", error);\r\n    }\r\n  };\r\n\r\n  // Calculate the total amount\r\n  const getTotalAmount = () => {\r\n    return paymentDetails.reduce((total, detail) => total + detail.amount, 0);\r\n  };\r\n\r\n  const formatCurrency = (value) => {\r\n    return value.toLocaleString(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"NGN\",\r\n    });\r\n  };\r\n\r\n  const handlePaystackSuccessAction = async (reference) => {\r\n    // Implementation for whatever you want to do with reference and after success call.\r\n    setPayStackDetails(reference);\r\n    setPaymentReference(reference.trxref);\r\n    setPaymentStatus(reference.message);\r\n    console.log(\"reference:\", paymentStatus, paymentReference, payStackDetail);\r\n    const paymentData = {\r\n      userId,\r\n      referencId: paymentReference,\r\n      amount: getTotalAmount(),\r\n      date: new Date(),\r\n      status: paymentStatus,\r\n      section: userProfile.section,\r\n      level: userProfile.level,\r\n    };\r\n\r\n    console.log(\"payload\", paymentData);\r\n\r\n    try {\r\n      const response = await paymentApi.savePayment(paymentData);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(\"Error saving payment:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePaystackCloseAction = () => {\r\n    // implementation for  whatever you want to do when the Paystack dialog closed.\r\n    console.log(\"closed\");\r\n  };\r\n\r\n  const componentProps = {\r\n    ...config,\r\n    text: \"Proceed to Paystack\",\r\n    onSuccess: (reference) => handlePaystackSuccessAction(reference),\r\n    onClose: handlePaystackCloseAction,\r\n  };\r\n\r\n  const handleVerificationStart = () => {\r\n    // Redirect or perform other actions to start the verification process\r\n  };\r\n\r\n  const handlePaymentStart = () => {\r\n    // Open the Paystack payment gateway in a new tab\r\n    const paymentUrl = \"https://paystack.com\"; // Replace with the actual Paystack payment URL\r\n    window.open(paymentUrl, \"_blank\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkPaymentStatus();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {hasPayment ? (\r\n        <div>\r\n          <p>You have already made a payment.</p>\r\n          <button onClick={handleVerificationStart}>\r\n            Start Verification for Other Fees\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Description</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paymentDetails &&\r\n                paymentDetails.map((detail, index) => (\r\n                  <tr key={index}>\r\n                    <td>{detail.description}</td>\r\n                    <td>{formatCurrency(detail.amount)}</td>\r\n                  </tr>\r\n                ))}\r\n              <tr>\r\n                <td>Total</td>\r\n                <td>{formatCurrency(getTotalAmount())}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <p>\r\n            You have not made any payment. Press the button below to start the\r\n            verification for other fees uploading.\r\n          </p>\r\n\r\n          <PaystackButton {...componentProps} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}