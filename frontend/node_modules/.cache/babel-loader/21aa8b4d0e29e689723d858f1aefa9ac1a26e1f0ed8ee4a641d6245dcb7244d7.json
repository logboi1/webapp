{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BEN\\\\Desktop\\\\webapp\\\\frontend\\\\src\\\\components\\\\payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport paymentApi from \"../API/paymentApi\";\nimport useStore from \"../store\";\nimport { PaystackButton } from \"react-paystack\";\nimport SuccessToast from \"./toast/successtoast\";\nimport ErrorToast from \"./toast/errortoast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  reference: new Date().getTime().toString(),\n  email: \"user@example.com\",\n  amount: 200000,\n  //Amount is in the country's lowest currency. E.g Kobo, so 20000 kobo = N200\n  publicKey: \"pk_test_4a9a3f6b23362918bbe4cbaadb3860d7b96f6553\"\n};\nconst PaymentPage = () => {\n  _s();\n  const userProfile = useStore(state => state.userProfile);\n  const [hasPayment, setHasPayment] = useState(false);\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const [paymentReference, setPaymentReference] = useState(\"\");\n  const [payStackDetail, setPayStackDetails] = useState([]);\n  const userId = userProfile._id;\n\n  // Define the hardcoded payment details\n  const paymentDetails = [{\n    description: \"Tuition Fee\",\n    amount: 500\n  }, {\n    description: \"Library Fee\",\n    amount: 50\n  }, {\n    description: \"Laboratory Fee\",\n    amount: 100\n  }, {\n    description: \"Miscellaneous Fee\",\n    amount: 30\n  }];\n  const checkPaymentStatus = async () => {\n    try {\n      const {\n        response\n      } = await paymentApi.getPayment(userId);\n      console.log(\"status:\", status);\n    } catch (error) {\n      console.error(\"Error checking payment status:\", error);\n    }\n  };\n\n  // Calculate the total amount\n  const getTotalAmount = () => {\n    return paymentDetails.reduce((total, detail) => total + detail.amount, 0);\n  };\n  const formatCurrency = value => {\n    return value.toLocaleString(\"en-US\", {\n      style: \"currency\",\n      currency: \"NGN\"\n    });\n  };\n  const handlePaystackSuccessAction = async reference => {\n    try {\n      // Implementation for whatever you want to do with reference and after success call.\n      setPayStackDetails(reference);\n      setPaymentReference(reference.trxref);\n      setPaymentStatus(reference.message);\n      const paymentData = {\n        userId,\n        referencId: reference.trxref,\n        amount: getTotalAmount(),\n        date: new Date(),\n        status: reference.message,\n        section: userProfile.section,\n        level: userProfile.level\n      };\n      if (reference.status === \"Approved\") {\n        setHasPayment(true);\n      }\n      try {\n        const response = await paymentApi.savePayment(paymentData);\n        console.debug(response);\n        SuccessToast(response.message);\n      } catch (error) {\n        console.debug(\"Error saving payment:\", error);\n        ErrorToast(\"Error saving payment\");\n      }\n    } catch (error) {\n      console.debug(\"Error processing payment:\", error);\n      ErrorToast(\"Error processing payment\");\n    }\n  };\n  const handlePaystackCloseAction = () => {\n    // implementation for  whatever you want to do when the Paystack dialog closed.\n    console.log(\"closed\");\n  };\n  const componentProps = {\n    ...config,\n    text: \"Proceed to Paystack\",\n    onSuccess: reference => handlePaystackSuccessAction(reference),\n    onClose: handlePaystackCloseAction\n  };\n  const handleVerificationStart = () => {\n    // Redirect or perform other actions to start the verification process\n  };\n  useEffect(() => {\n    checkPaymentStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: hasPayment ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have already made a payment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerificationStart,\n        children: \"Start Verification for Other Fees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [paymentDetails && paymentDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: detail.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(detail.amount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(getTotalAmount())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not made any payment. Press the button below to start the verification for other fees uploading.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PaystackButton, {\n        ...componentProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"KL+BZkMQ3dEDBupDa/9nBjLPSV8=\", false, function () {\n  return [useStore];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","paymentApi","useStore","PaystackButton","SuccessToast","ErrorToast","jsxDEV","_jsxDEV","config","reference","Date","getTime","toString","email","amount","publicKey","PaymentPage","_s","userProfile","state","hasPayment","setHasPayment","paymentStatus","setPaymentStatus","paymentReference","setPaymentReference","payStackDetail","setPayStackDetails","userId","_id","paymentDetails","description","checkPaymentStatus","response","getPayment","console","log","status","error","getTotalAmount","reduce","total","detail","formatCurrency","value","toLocaleString","style","currency","handlePaystackSuccessAction","trxref","message","paymentData","referencId","date","section","level","savePayment","debug","handlePaystackCloseAction","componentProps","text","onSuccess","onClose","handleVerificationStart","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/BEN/Desktop/webapp/frontend/src/components/payment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport paymentApi from \"../API/paymentApi\";\r\nimport useStore from \"../store\";\r\nimport { PaystackButton } from \"react-paystack\";\r\nimport SuccessToast from \"./toast/successtoast\";\r\nimport ErrorToast from \"./toast/errortoast\";\r\n\r\nconst config = {\r\n  reference: new Date().getTime().toString(),\r\n  email: \"user@example.com\",\r\n  amount: 200000, //Amount is in the country's lowest currency. E.g Kobo, so 20000 kobo = N200\r\n  publicKey: \"pk_test_4a9a3f6b23362918bbe4cbaadb3860d7b96f6553\",\r\n};\r\n\r\nconst PaymentPage = () => {\r\n  const userProfile = useStore((state) => state.userProfile);\r\n  const [hasPayment, setHasPayment] = useState(false);\r\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\r\n  const [paymentReference, setPaymentReference] = useState(\"\");\r\n  const [payStackDetail, setPayStackDetails] = useState([]);\r\n\r\n  const userId = userProfile._id;\r\n\r\n  // Define the hardcoded payment details\r\n  const paymentDetails = [\r\n    { description: \"Tuition Fee\", amount: 500 },\r\n    { description: \"Library Fee\", amount: 50 },\r\n    { description: \"Laboratory Fee\", amount: 100 },\r\n    { description: \"Miscellaneous Fee\", amount: 30 },\r\n  ];\r\n\r\n  const checkPaymentStatus = async () => {\r\n    try {\r\n      const { response } = await paymentApi.getPayment(userId);\r\n      console.log(\"status:\", status);\r\n    } catch (error) {\r\n      console.error(\"Error checking payment status:\", error);\r\n    }\r\n  };\r\n\r\n  // Calculate the total amount\r\n  const getTotalAmount = () => {\r\n    return paymentDetails.reduce((total, detail) => total + detail.amount, 0);\r\n  };\r\n\r\n  const formatCurrency = (value) => {\r\n    return value.toLocaleString(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"NGN\",\r\n    });\r\n  };\r\n\r\n  const handlePaystackSuccessAction = async (reference) => {\r\n    try {\r\n      // Implementation for whatever you want to do with reference and after success call.\r\n      setPayStackDetails(reference);\r\n      setPaymentReference(reference.trxref);\r\n      setPaymentStatus(reference.message);\r\n\r\n      const paymentData = {\r\n        userId,\r\n        referencId: reference.trxref,\r\n        amount: getTotalAmount(),\r\n        date: new Date(),\r\n        status: reference.message,\r\n        section: userProfile.section,\r\n        level: userProfile.level,\r\n      };\r\n\r\n      if (reference.status === \"Approved\") {\r\n        setHasPayment(true);\r\n      }\r\n\r\n      try {\r\n        const response = await paymentApi.savePayment(paymentData);\r\n        console.debug(response);\r\n        SuccessToast(response.message);\r\n      } catch (error) {\r\n        console.debug(\"Error saving payment:\", error);\r\n        ErrorToast(\"Error saving payment\");\r\n      }\r\n    } catch (error) {\r\n      console.debug(\"Error processing payment:\", error);\r\n      ErrorToast(\"Error processing payment\");\r\n    }\r\n  };\r\n\r\n  const handlePaystackCloseAction = () => {\r\n    // implementation for  whatever you want to do when the Paystack dialog closed.\r\n    console.log(\"closed\");\r\n  };\r\n\r\n  const componentProps = {\r\n    ...config,\r\n    text: \"Proceed to Paystack\",\r\n    onSuccess: (reference) => handlePaystackSuccessAction(reference),\r\n    onClose: handlePaystackCloseAction,\r\n  };\r\n\r\n  const handleVerificationStart = () => {\r\n    // Redirect or perform other actions to start the verification process\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkPaymentStatus();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {hasPayment ? (\r\n        <div>\r\n          <p>You have already made a payment.</p>\r\n          <button onClick={handleVerificationStart}>\r\n            Start Verification for Other Fees\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Description</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paymentDetails &&\r\n                paymentDetails.map((detail, index) => (\r\n                  <tr key={index}>\r\n                    <td>{detail.description}</td>\r\n                    <td>{formatCurrency(detail.amount)}</td>\r\n                  </tr>\r\n                ))}\r\n              <tr>\r\n                <td>Total</td>\r\n                <td>{formatCurrency(getTotalAmount())}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <p>\r\n            You have not made any payment. Press the button below to start the\r\n            verification for other fees uploading.\r\n          </p>\r\n\r\n          <PaystackButton {...componentProps} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}